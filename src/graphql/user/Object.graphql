type User {
  id: UUID!
  creationTime: DateTime!
  bio: String
  birthyear: Int
  blockingStartTime: DateTime
  blockingEndTime: DateTime
  certAgreement: CertAgreement
  cherry: NonNegativeInt!
  email: EmailAddress
  grade: Grade
  imageUrl: URL
  imageUrls: [URL!]
  isVerifiedBirthyear: Boolean!
  isVerifiedBirthday: Boolean!
  isVerifiedEmail: Boolean!
  isVerifiedName: Boolean!
  isVerifiedPhoneNumber: Boolean!
  isVerifiedSex: Boolean!
  legalName: NonEmptyString
  logoutTime: DateTime
  name: NonEmptyString
  nickname: String
  oAuthProviders: [OAuthProvider!]
  serviceAgreement: ServiceAgreement
  sex: Sex
  towns: [Town!]
}

type CertAgreement {
  showBirthdate: Boolean!
  showLegalName: Boolean!
  showSex: Boolean!
  showSTDTest: Boolean!
  stdTestSince: DateTime
  showImmunization: Boolean!
  immunizationSince: DateTime
  showSexualCrime: Boolean!
  sexualCrimeSince: DateTime
}

type ServiceAgreement {
  termsAgreement: Boolean!
  termsAgreementTime: DateTime
  privacyAgreement: Boolean!
  privacyAgreementTime: DateTime
  locationAgreement: Boolean!
  locationAgreementTime: DateTime
  adAgreement: Boolean!
  adAgreementTime: DateTime
  personalDataStoringYear: NonNegativeInt!
}

type Town {
  count: NonNegativeInt!
  name: String
}

enum Sex {
  UNKNOWN
  MALE
  FEMALE
  OTHER
}

enum OAuthProvider {
  KAKAO
  NAVER
  GOOGLE
}

enum Grade {
  FREE
  PRO
  ENTERPRISE
}
